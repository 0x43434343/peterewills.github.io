#+TITLE: Org Test
#+SUBTITLE: Testing out stuff for org blogging.
#+DATE: 2019-09-22

#+STARTUP: showall indent
#+OPTIONS: toc:nil 
#+OPTIONS: tex:t

Basic idea is to rework [[file:~/.emacs.d/lisp/ox-jekyll-md/ox-jekyll-md.el::;;;%20ox-jekyll-md.el%20---%20Export%20Jekyll%20on%20Markdown%20articles%20using%20org-mode.%20-*-%20lexical-binding:%20t;%20-*-][ox-jekyll]] to fit my purposes. It's derived from ox-md which is
derived from ox-html.

[[https://github.com/gonsie/ox-jekyll-md][ox-jekyll source code]]

[[https://github.com/emacsmirror/org/blob/master/lisp/ox-md.el][ox-md source code]]

[[https://github.com/emacsmirror/org/blob/master/lisp/ox-html.el][ox-html source code]]

* TODO [7/7]
SCHEDULED: <2019-09-21 Sat>

Schedules get ignored, which is correct. Can schedule or deadline parts of the post if
you want to.

- [X] Fix underlining things
- [X] Fix links
- [X] *Fix equation delimiter rendering*
- [X] Ignore =ltximg= directories
- [X] Get preamble export working
  - [X] Pass subtitle in as excerpt
  - [X] Set category as "post", don't set layout
- [X] Get footnotes exporting properly
- [X] Make images export properly. 

* TODO Eventually

- [ ] Have =RESULTS= blocks from org-babel render in some nice way
- [ ] Minor mode that exports whenever I save, as long as I'm in =_drafts= or =_posts=.
- [ ] set =OPTIONS: comments:nil= and it will appear in the yaml front-matter

** Fixing Images

Right now they just get treated like any other link. Also, the link gets prepended with
a full path, beginning with =file://=, which is /not/ what we want; we just want the
_relative_ path from here to the image. What if I just type that in directly?

Well, it's actually kind of complicated. What I really want to do is to have a function
that looks at links and strips them down to absolute paths, when appropriate.

Okay so take a look at =ox-hugo-link= ([[https://github.com/kaushalmodi/ox-hugo/blob/master/ox-hugo.el#L1963][code here]]) for an example of a function that parses
links. We want something much simpler - it should check whether the link is an image,
and prepend an =!= if so; also, it should look at the path and determine how to strip it
down to the appropriate relative path so that it treats the jekyll root like the true
root.

** Fixing Equations

Look through [[https:github.com/emacsmirror/org/blob/master/lisp/ox-html.el][the code for ox-html]] and search for "latex" to find the parts where they
render latex. It's pretty complicated, which makes sense. We just need to change the
delimiters it uses.

** Fixing links

I need to go digging through the section where it generates links. I want to set up a
thing that specifically handles http links in there.

UPDATE: Actually, you can just write your links as =https://= instead of =https:=, and then
it works fine. I will start doing this in general, I think.

* Blogging in Org!

use =ox-jekyll=, which can be found [[https://github.com/gonsie/ox-jekyll-md][here]].

but I need to redefine the way it exports equations

So I change the =translate-alist= to include something additional for equations. But I
don't know how to figure out the right "key" for a latex chunk, and how to get its
contents. I need to better understand what the =translate-alist= is actually doing.

[[file:~/.emacs.d/elpa/ox-gfm-1.0/ox-gfm.el:::translate-alist%20'((inner-template%20.%20org-gfm-inner-template)%20(paragraph%20.%20org-gfm-paragraph)%20(strike-through%20.%20org-gfm-strike-through)%20(src-block%20.%20org-gfm-src-block)%20(table-cell%20.%20org-gfm-table-cell)%20(table-row%20.%20org-gfm-table-row)%20(table%20.%20org-gfm-table)))][See this code.]]

second level shit

how about _underlined stuff_ 

how about /italicized stuff/

how about *bolded stuff*

How about footnotes?[fn:1] 

** Here's some content

third level shit

[[https://google.com][here's a link]]

Here's an equation:

$$ x = \sum_{n=1}^\infty \left(\frac{1}{n \log n}\right) $$

Here's some inline math: $x = y^2$.

* Does code work?

#+BEGIN_SRC python
import numpy as np
np.min(x for x in range(10))  
#+END_SRC

#+BEGIN_SRC bash
ls -alFh
pip list | grep lachesis
#+END_SRC

#+BEGIN_SRC ipython :async t :results drawer :session
import numpy as np
min(np.sin(x) for x in np.linspace(0,2*np.pi,100)) 
#+END_SRC

#+RESULTS:
:RESULTS:
# Out[3]:
: -0.9998741276738751
:END:

* Here's a table

| Name               | Age | Phone |
|--------------------+-----+-------|
| Peter Wills        |  31 |   585 |
| Kathleen Finlinson |  29 |   435 |

Okay looks pretty good there.

* Images?

[[file:~/code/jekyll/peterewills.github.io/assets/images/kitties.jpg][kitties!]]

* Footnotes

[fn:1] Schwink!


